insert into "DWH_AUTH_USER".info 
(
  id,
  email,
  auth_email,
  phone_number,
  vk_name,
  city,
  hometown,
  location,
  github_name,
  telegram_name,
  home_phone_number,
  education_level,
  university,
  faculty,
  "group",
  position,
  student_id_number,
  department,
  mode_of_study,
  full_name,
  birth_date,
  photo,
  sex,
  job,
  work_location,
  is_deleted
)
select
  user_id as id,
  email,
  auth_email,
  phone_number,
  vk_name,
  city,
  hometown,
  location,
  github_name,
  telegram_name,
  home_phone_number,
  education_level,
  university,
  faculty,
  "group",
  position,
  student_id_number,
  department,
  mode_of_study,
  full_name,
  birth_date,
  photo,
  sex,
  job,
  work_location,
  is_deleted
from "DWH_USER_INFO".info
left join
(
select
    user_id,
    any_value(u.is_deleted) as is_deleted,
    string_agg(distinct case when param = 'email' then value end, ', ') as auth_email
from "STG_AUTH".auth_method as au
left join "STG_AUTH".user as u on u.id = au.user_id
group by au.user_id
) using (user_id)
on conflict (id) do update set
	email = EXCLUDED.email,
	auth_email = EXCLUDED.auth_email,
	phone_number = EXCLUDED.phone_number,
	vk_name = EXCLUDED.vk_name,
	city = EXCLUDED.city,
	hometown = EXCLUDED.hometown,
	location = EXCLUDED.location,
	github_name = EXCLUDED.github_name,
	telegram_name = EXCLUDED.telegram_name,
	home_phone_number = EXCLUDED.home_phone_number,
	education_level = EXCLUDED.education_level,
	university = EXCLUDED.university,
	faculty = EXCLUDED.faculty,
	"group" = EXCLUDED."group",
	position = EXCLUDED.position,
	student_id_number = EXCLUDED.student_id_number,
	department = EXCLUDED.department,
	mode_of_study = EXCLUDED.mode_of_study,
	full_name = EXCLUDED.full_name,
	birth_date = EXCLUDED.birth_date,
	photo = EXCLUDED.photo,
	sex = EXCLUDED.sex,
	job = EXCLUDED.job,
	work_location = EXCLUDED.work_location,
	is_deleted = EXCLUDED.is_deleted;